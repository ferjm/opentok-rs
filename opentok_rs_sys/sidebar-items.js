initSidebarItems({"constant":[["OTC_VIDEO_FRAME_METADATA_MAX_SIZE",""],["otc_constant_OTC_FALSE","< Constant that represents false."],["otc_constant_OTC_SUCCESS","< Constant that represents success."],["otc_constant_OTC_TRUE","< Constant that represents true."],["otc_error_OTC_GENERIC_ERROR",""],["otc_error_code_OTC_CAMERA_FAILED","Acquiring video camera error code."],["otc_error_code_OTC_CONNECTION_DROPPED","Connection dropped error code."],["otc_error_code_OTC_CONNECTION_TIMED_OUT","Connection time out error code."],["otc_error_code_OTC_FATAL","Fatal error code."],["otc_error_code_OTC_INVALID_PARAM","Invalid funtion argument error code."],["otc_error_code_OTC_UNKNOWN_PUBLISHER_INSTANCE","Unknown publisher instance error code."],["otc_error_code_OTC_UNKNOWN_SUBSCRIBER_INSTANCE","Unknown subscriber instance error code."],["otc_error_code_OTC_VIDEO_CAPTURE_FAILED","Video capture error code."],["otc_error_code_OTC_VIDEO_RENDER_FAILED","Video rendering error code."],["otc_error_code_OT_UNABLE_TO_ACCESS_MEDIA_ENGINE","Media engine access error code."],["otc_log_level_OTC_LOG_LEVEL_ALL","< All messages."],["otc_log_level_OTC_LOG_LEVEL_DEBUG","< Debug level messages."],["otc_log_level_OTC_LOG_LEVEL_DISABLED","< No messages enum value."],["otc_log_level_OTC_LOG_LEVEL_ERROR","< Error level messages."],["otc_log_level_OTC_LOG_LEVEL_FATAL","< Fatal level messages."],["otc_log_level_OTC_LOG_LEVEL_INFO","< Info level messages."],["otc_log_level_OTC_LOG_LEVEL_MSG","< Message level messages."],["otc_log_level_OTC_LOG_LEVEL_TRACE","< Trace level messages."],["otc_log_level_OTC_LOG_LEVEL_WARN","< Warning level messages."],["otc_publisher_error_code_OTC_PUBLISHER_INTERNAL_ERROR","< Internal error."],["otc_publisher_error_code_OTC_PUBLISHER_SESSION_DISCONNECTED",""],["otc_publisher_error_code_OTC_PUBLISHER_TIMED_OUT","< Time-out attempting to publish."],["otc_publisher_error_code_OTC_PUBLISHER_UNABLE_TO_PUBLISH","< Unable to publish error."],["otc_publisher_error_code_OTC_PUBLISHER_WEBRTC_ERROR","< WebRTC error."],["otc_publisher_video_type_OTC_PUBLISHER_VIDEO_TYPE_CAMERA","< Camera video stream."],["otc_publisher_video_type_OTC_PUBLISHER_VIDEO_TYPE_SCREEN","< Screen capture video stream."],["otc_session_error_code_OTC_SESSION_AUTHORIZATION_FAILURE",""],["otc_session_error_code_OTC_SESSION_BLOCKED_COUNTRY",""],["otc_session_error_code_OTC_SESSION_CONNECTION_DROPPED",""],["otc_session_error_code_OTC_SESSION_CONNECTION_FAILED",""],["otc_session_error_code_OTC_SESSION_CONNECTION_LIMIT_EXCEEDED",""],["otc_session_error_code_OTC_SESSION_CONNECTION_REFUSED",""],["otc_session_error_code_OTC_SESSION_CONNECTION_TIMED_OUT",""],["otc_session_error_code_OTC_SESSION_FORCE_UNPUBLISH_OR_INVALID_STREAM","< Invalid stream."],["otc_session_error_code_OTC_SESSION_ILLEGAL_STATE",""],["otc_session_error_code_OTC_SESSION_INTERNAL_ERROR",""],["otc_session_error_code_OTC_SESSION_INVALID_SESSION",""],["otc_session_error_code_OTC_SESSION_INVALID_SIGNAL_TYPE",""],["otc_session_error_code_OTC_SESSION_NOT_CONNECTED",""],["otc_session_error_code_OTC_SESSION_NO_MESSAGING_SERVER",""],["otc_session_error_code_OTC_SESSION_NULL_OR_INVALID_PARAMETER",""],["otc_session_error_code_OTC_SESSION_PUBLISHER_NOT_FOUND",""],["otc_session_error_code_OTC_SESSION_SIGNAL_DATA_TOO_LONG",""],["otc_session_error_code_OTC_SESSION_SIGNAL_TYPE_TOO_LONG",""],["otc_session_error_code_OTC_SESSION_STATE_FAILED","< The connection timed out while attempting to get the sessionâ€™s state."],["otc_session_error_code_OTC_SESSION_SUBSCRIBER_NOT_FOUND",""],["otc_session_error_code_OTC_SESSION_UNEXPECTED_GET_SESSION_INFO_REPONSE",""],["otc_stream_video_type_OTC_STREAM_VIDEO_TYPE_CAMERA","< Camera video stream."],["otc_stream_video_type_OTC_STREAM_VIDEO_TYPE_CUSTOM","< Custom video stream."],["otc_stream_video_type_OTC_STREAM_VIDEO_TYPE_SCREEN",""],["otc_subscriber_error_code_OTC_SUBSCRIBER_INTERNAL_ERROR","< Internal error when subscribing."],["otc_subscriber_error_code_OTC_SUBSCRIBER_SERVER_CANNOT_FIND_STREAM","< The subscriber failed because the stream is missing. This can happen if the subscriber is created at the same time the stream is removed from the session."],["otc_subscriber_error_code_OTC_SUBSCRIBER_SESSION_DISCONNECTED","< Attempting to subscribe to a stream in a session that you have disconnected from."],["otc_subscriber_error_code_OTC_SUBSCRIBER_STREAM_LIMIT_EXCEEDED","< The client tried to subscribe     to a stream in a session that has exceeded the limit for simultaneous streams."],["otc_subscriber_error_code_OTC_SUBSCRIBER_TIMED_OUT",""],["otc_subscriber_error_code_OTC_SUBSCRIBER_WEBRTC_ERROR","< Subscriber WebRTC failure."],["otc_video_codec_type_OTC_VIDEO_CODEC_H264","< Video codec type for H.264."],["otc_video_codec_type_OTC_VIDEO_CODEC_VP8","< Video codec type for VP8."],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_ABGR32",""],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_ARGB32",""],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_BGRA32",""],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_COMPRESSED",""],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_MAX","< Maxinum value."],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_MJPEG",""],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_NV12","< NV12 video frame format enum value."],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_NV21","< NV21 video frame format enum value."],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_RGB24","< RGB24 video frame format enum value."],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_RGBA32",""],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_UNKNOWN",""],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_UYVY","< UYVY video frame format enum value."],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_YUV420P",""],["otc_video_frame_format_OTC_VIDEO_FRAME_FORMAT_YUY2","< YUY2 video frame format enum value."],["otc_video_frame_plane_OTC_VIDEO_FRAME_PLANE_PACKED","< Video frame plane packed  enum value."],["otc_video_frame_plane_OTC_VIDEO_FRAME_PLANE_U","< Video frame plane U enum value."],["otc_video_frame_plane_OTC_VIDEO_FRAME_PLANE_UV_INTERLEAVED",""],["otc_video_frame_plane_OTC_VIDEO_FRAME_PLANE_V","< Video frame plane V enum value."],["otc_video_frame_plane_OTC_VIDEO_FRAME_PLANE_VU_INTERLEAVED",""],["otc_video_frame_plane_OTC_VIDEO_FRAME_PLANE_Y","< Video frame plane Y enum value."],["otc_video_reason_OTC_VIDEO_REASON_CODEC_NOT_SUPPORTED","< The video event was caused when video in the subscriber stream was disabled because the stream uses a video codec that is not supported on the device."],["otc_video_reason_OTC_VIDEO_REASON_PUBLISH_VIDEO",""],["otc_video_reason_OTC_VIDEO_REASON_QUALITY","< The video event was caused by a change to the video stream quality."],["otc_video_reason_OTC_VIDEO_REASON_SUBSCRIBE_TO_VIDEO",""]],"fn":[["otc_audio_device_read_render_data","Retrieves unrendered audio samples from the session. These samples are mixed from the streams in the session you have subscribed to."],["otc_audio_device_write_capture_data","Passes in audio data from the audio device to transmit to a session. This audio data is used by streams you publish to the session."],["otc_connection_copy","Makes a copy of this connection."],["otc_connection_delete","Releases resources associated with the connection."],["otc_connection_get_creation_time","Returns the timestamp for when the client connected to the OpenTok session."],["otc_connection_get_data","Returns the data associated with the connection. You set this data when you create the token used for by the client to connect to the OpenTok session. See the  Token Creation Overview developer guide."],["otc_connection_get_id","Returns the unique identifier for this connection."],["otc_connection_get_session_id","Gets the session ID for the session the connection is connected to."],["otc_destroy","Destroys the library engine. You should call this function when you are done executing code that uses the library. @return Return value indicating either error or success."],["otc_get_log_level","Gets the current console logging level. @return The log level set."],["otc_init","Initializes the library. You must call this function before the execution of any other code using the library. @param reserved A void pointer to a memory area holding reserved resources used for the internal implementation. This must be set to NULL. @return Return value indicating either error or success."],["otc_log_enable","Enables logging of SDK messages for a given log level. @param log_level The desired log level. @see otc_log_set_logger_callback @see otc_get_log_level"],["otc_log_set_logger_callback","Sets the function pointer to a custom logging callback function to get messages logged by the SDK. If you do not set a logging callback function, the SDK will log messages to the console. @param callback A pointer to the callback function. @see otc_log_enable"],["otc_media_utils_codecs_delete","Deletes an otc_media_utils_codecs instance."],["otc_media_utils_get_supported_codecs","Updates a otc_media_utils_codecs struct with the media codecs that are available on the device."],["otc_publisher_delete","Releases a publisher instance, including all hardware resources bound to it."],["otc_publisher_get_audio_fallback_enabled","Returns whether the publisher audio fallback feature is enabled or not. See the {@link otc_publisher_set_audio_fallback_enabled} function."],["otc_publisher_get_name","Gets the name for a given publisher."],["otc_publisher_get_publish_audio","Returns whether the Publisher is publishing audio or not."],["otc_publisher_get_publish_video","Returns whether the publisher is publishing video or not."],["otc_publisher_get_publisher_id","Gets a unique identifier for a publisher."],["otc_publisher_get_rtc_stats_report","Gets the RTC stats report for the subscriber. This is an asynchronous operation. create an otc_publisher_rtc_stats_report_cb struct and pass it into the {@link otc_publisher_set_rtc_stats_report_cb} function prior to calling this function. When the stats are available, the {@link otc_publisher_set_rtc_stats_report_cb} callback function is called."],["otc_publisher_get_session","Returns the {@link otc_session} associated this publisher instance."],["otc_publisher_get_stream","Returns the stream associated with the publisher."],["otc_publisher_get_user_data","Gets user data for a given publisher."],["otc_publisher_get_video_type","Gets the publisher video type. See the {@link otc_publisher_set_video_type} function."],["otc_publisher_new","Creates a new otc_publisher instance."],["otc_publisher_new_with_settings","Creates a new otc_publisher instance."],["otc_publisher_set_audio_fallback_enabled","Enables or disables the audio fallback feature."],["otc_publisher_set_max_audio_bitrate","Sets the max audio bitrate for the publisher."],["otc_publisher_set_publish_audio","Whether to publish audio or not. By default, streams publish both audio and video."],["otc_publisher_set_publish_video","Whether to publish video or not. By default, streams publish both audio and video."],["otc_publisher_set_rtc_stats_report_cb","Sets the RTC stats report callback the publisher."],["otc_publisher_set_video_type","Sets the publisher video type. By default, videos have the video type set to OTC_PUBLISHER_VIDEO_TYPE_CAMERA (indicating the source of the video is a camera). Set this to OTC_PUBLISHER_VIDEO_TYPE_SCREEN to indicate that the video source is screen sharing. Other clients can detect the video type for streams in the session (to determine the video source type)."],["otc_publisher_settings_delete","Deletes an otc_publisher_settings instance."],["otc_publisher_settings_new","Creates a new otc_publisher_settings instance."],["otc_publisher_settings_set_audio_track","Enables an audio track for a publisher to be constructed with {@link otc_publisher_new_with_settings}."],["otc_publisher_settings_set_name","Sets the desired name for a publisher to be constructed with {@link otc_publisher_new_with_settings}."],["otc_publisher_settings_set_stereo","Enables stereo audio for a publisher to be constructed with {@link otc_publisher_new_with_settings}."],["otc_publisher_settings_set_video_capturer","Sets the video capturer for a publisher to be constructed with {@link otc_publisher_new_with_settings}."],["otc_publisher_settings_set_video_track","Enables a video track for a publisher to be constructed with {@link otc_publisher_new_with_settings}."],["otc_session_connect","Connects the client to an OpenTok session."],["otc_session_delete","Releases resources associated with the session."],["otc_session_disconnect","Disconnects the client from this session. All of the clientâ€™s subscribers and publishers will also be will be disconnected from the session."],["otc_session_get_capabilities","Gets the capabilities of the client connecxted to the session. All {@link otc_session_capabilities} members are undefined until {@link otc_session_callbacks.on_connected} has been called."],["otc_session_get_connection","Gets the connection object associated with this session."],["otc_session_get_id","Gets the unique session ID for this session."],["otc_session_get_user_data","Gets the user data associated with the session. See {@link otc_session_callbacks.user_data}."],["otc_session_new","Creates a new {@link otc_session} struct instance. Pass this into the {@link otc_session_connect} function to connect to the OpenTok session."],["otc_session_new_with_settings","Creates a new OpenTok session with advanced settings. These include settings for suppressing connection events, custom TURN servers, the IP proxy feature, and the IP whitelist feature."],["otc_session_publish","Starts a publisher streaming to the session."],["otc_session_report_issue","Report that your app experienced an issue. You can use the issue ID with the Inspector tool or when discussing an issue with the Vonage Video API support team."],["otc_session_send_signal","Sends a signal to all clients connected to the session. See {@link otc_session_send_signal_with_options}, {@link otc_session_send_signal_to_connection}, and {@link otc_session_send_signal_to_connection_with_options}. Also see the  Signaling overview."],["otc_session_send_signal_to_connection","Sends a signal to a specific client connected to the session. See {@link otc_session_send_signal_to_connection_with_options}, {@link otc_session_send_signal}, and {@link otc_session_send_signal_with_options}. Also see the  Signaling overview."],["otc_session_send_signal_to_connection_with_options","Sends a signal to a specific client, with specified options. See {@link otc_session_send_signal}, {@link otc_session_send_signal_to_connection}, and {@link otc_session_send_signal_with_options}. Also see the  Signaling overview."],["otc_session_send_signal_with_options","Sends a signal to all clients connected to the session, with specified options. See {@link otc_session_send_signal}, {@link otc_session_send_signal_to_connection}, and {@link otc_session_send_signal_to_connection_with_options}. Also see the  Signaling overview."],["otc_session_settings_delete","Deletes an {@link otc_session_settings} instance."],["otc_session_settings_new","Creates a new {@link otc_session_settings} instance, used to set up advanced session settings. Call the following functions to configure these settings before calling the {@link otc_session_new_with_settings} function to create a session with these settings:"],["otc_session_settings_set_connection_events_suppressed","Prevent connection events, to support large interactive video sessions. This prevents {@link otc_session_callbacks.on_connection_created} and {@link otc_session_callbacks.on_connection_dropped} callback functions from being invoked when other clients connect to or disconnect from the session. (Also, the OpenTok server does not send these events to the client.) For more information, see  Suppressing connection events in the OpenTok developer guides."],["otc_session_settings_set_custom_ice_config","Enables custom ICE sever configuration. This is part of the  configurable TURN feature."],["otc_session_settings_set_ip_whitelist","Pass in OTC_TRUE to have the client use the IP address white list. This feature is available as an add-on feature for Enterprise partners."],["otc_session_settings_set_proxy_url","Sets the IP proxy URL. See the  IP Proxy developer guide."],["otc_session_subscribe","Starts subscribing to (receiving a stream for) a subscriberâ€™s audio-video stream in this session."],["otc_session_unpublish","Causes a publisher from a session (causing its stream to stop)."],["otc_session_unsubscribe","Stops subscribing to (receiving a stream for) a specified subscriber in the session."],["otc_set_audio_device","Sets the audio device to be used. You must call this function before you connect to a session. Additionally, this is a global operation that must persist throughout the lifetime of a session."],["otc_stream_copy","Makes a copy of a stream."],["otc_stream_delete","Releases resources associated with the stream."],["otc_stream_get_connection","Get the connection associated with the client publishing the stream."],["otc_stream_get_creation_time","Gets the creation time of the stream."],["otc_stream_get_id","Gets the unique identifier for this stream."],["otc_stream_get_name","Gets the name of the stream. The publisher of the stream can set this name to identify the stream."],["otc_stream_get_video_height","Returns the height, in pixels, of the video stream."],["otc_stream_get_video_type","Returns the video type of the stream."],["otc_stream_get_video_width","Returns the width, in pixels, of the video stream."],["otc_stream_has_audio","Checks whether this stream is currently publishing audio or not."],["otc_stream_has_audio_track","Checks whether this stream contains an audio track or not."],["otc_stream_has_video","Checks whether this stream is currently publishing video or not."],["otc_stream_has_video_track","Checks whether this stream contains a video track or not."],["otc_subscriber_delete","Releases a subscriber instance, including all hardware and UI resources bound to it."],["otc_subscriber_get_preferred_framerate","Returns the preferred frame rate for the subscriberâ€™s stream."],["otc_subscriber_get_preferred_resolution","Returns the preferred resolution for the subscriberâ€™s stream."],["otc_subscriber_get_rtc_stats_report","Gets the RTC stats report for the subscriber. This is an asynchronous operation. create an otc_subscriber_rtc_stats_report_cb struct and pass it into the {@link otc_subscriber_set_rtc_stats_report_cb} function prior to calling this function. When the stats are available, the {@link otc_subscriber_set_rtc_stats_report_cb} callback function is called."],["otc_subscriber_get_session","Returns the {@link otc_session} associated this instance."],["otc_subscriber_get_stream","Returns the stream associated with the subscriber."],["otc_subscriber_get_subscribe_to_audio","Returns whether the subscriber is subscribed to the streamâ€™s audio or not."],["otc_subscriber_get_subscribe_to_video","Returns whether the subscriber is subscribed to the streamâ€™s video or not."],["otc_subscriber_get_subscriber_id","Gets a unique identifier for a given subscriber."],["otc_subscriber_get_user_data","Gets user data for a given subscriber."],["otc_subscriber_new","Creates a new Subscriber for a given Stream."],["otc_subscriber_set_preferred_framerate","Sets the preferred frame rate for the subscriberâ€™s stream."],["otc_subscriber_set_preferred_resolution","Sets the preferred resolution for the subscriberâ€™s stream."],["otc_subscriber_set_rtc_stats_report_cb","Sets the RTC stats report callback the subscriber. See otc_subscriber_get_rtc_stats_report."],["otc_subscriber_set_subscribe_to_audio","Subscribes to the streamâ€™s audio."],["otc_subscriber_set_subscribe_to_video","Subscribes to the streamâ€™s video."],["otc_video_capturer_provide_frame","Provides a video frame to the video capturer."],["otc_video_frame_convert","Converts a given frame. All the video frames provided by the SDK callback functions are bound to this. If you plan to save the frame so you use it later, youâ€™ll need to copy it. In addition to that, if you want to convert a video frame to a different format, youâ€™ll use this function also If the destination format is the same as the source, a shallow copy (n buffer copy) will be made if possible."],["otc_video_frame_convert_inplace","Converts a given frame in place. This changes the data of the input frame."],["otc_video_frame_copy","Copies a given video frame."],["otc_video_frame_delete","Free resources associated with the frame."],["otc_video_frame_get_buffer","Gets a pointer to the buffer containing video frame data."],["otc_video_frame_get_buffer_size","Gets the size of the buffer containing video frame data."],["otc_video_frame_get_format","Gets the video format of a video frame."],["otc_video_frame_get_height","Gets the height of a video frame, in pixels."],["otc_video_frame_get_metadata","Gets the metadata associated with the video frame."],["otc_video_frame_get_native_handle",""],["otc_video_frame_get_number_of_planes","Gets the number of planes of a video frame. Typically, this returns 3 for a YUV fame and 1 for a RGBA/BGRA fame."],["otc_video_frame_get_plane_binary_data","Gets the binary data from one of the planes of a video frame."],["otc_video_frame_get_plane_height","Gets the height of a plane in a video frame."],["otc_video_frame_get_plane_size","Gets the size of a plane in a video frame."],["otc_video_frame_get_plane_stride","Gets plane stride from a give plane in a video frame."],["otc_video_frame_get_plane_width","Gets the width of a plane in a video frame."],["otc_video_frame_get_timestamp","Gets a video frame timestamp."],["otc_video_frame_get_width","Gets the width of a video frame, in pixels."],["otc_video_frame_is_contiguous","Checks whether a video frame is contiguous or not."],["otc_video_frame_is_packed","Checks whether a video frame is packed or not."],["otc_video_frame_mutable_copy","Makes a mutable copy of a given video frame."],["otc_video_frame_new","Creates a new video frame with a given format."],["otc_video_frame_new_I420","Creates a new video frame with I420 format."],["otc_video_frame_new_I420_from_planes_with_format","Creates a new video frame with I420 format from a list of planes."],["otc_video_frame_new_I420_wrapper","Creates a new I420 format video frame from YUV data."],["otc_video_frame_new_MJPEG","Creates a new video frame with MJPEG format."],["otc_video_frame_new_NV12_wrapper","Creates a new video frame with an NV12 wrapper."],["otc_video_frame_new_NV21_wrapper","Creates a new video frame with an NV21 wrapper."],["otc_video_frame_new_compressed","Creates a new compressed video frame."],["otc_video_frame_new_contiguous_memory_wrapper","Creates a new video frame from data in a contiguous memmory buffer."],["otc_video_frame_new_from_planes","Creates a new video frame with a given format from its planes."],["otc_video_frame_new_planar_memory_wrapper","Creates a new video frame from a planar memory wrapper. The {@link otc_video_frame_planar_memory_callbacks} struct, passed in, defines callback functions that are invoked when video frame and stride data is requested."],["otc_video_frame_set_format","Sets the video format of a video frame."],["otc_video_frame_set_metadata","Sets the metadata associated with a video frame."],["otc_video_frame_set_timestamp","Sets the timestamp for a video frame."]],"struct":[["otc_audio_device",""],["otc_audio_device_callbacks","This structure includes a set of function pointers to callback functions to use with an audio device. The SDK calls these functions when events related to the audio device occur."],["otc_audio_device_settings","This structure represents the settings associated with an audio device."],["otc_connection",""],["otc_custom_ice_config","ICE server configuration."],["otc_media_utils_codecs","A structure representing the supported codecs for encoding and decoding video."],["otc_publisher",""],["otc_publisher_audio_stats","Publisher audio stats."],["otc_publisher_callbacks","Publisher callback functions."],["otc_publisher_rtc_stats","Represents RTC statistics for a media stream published by the publisher."],["otc_publisher_rtc_stats_report_cb","Defines the struct for setting the publisher RTC stats report callack."],["otc_publisher_settings",""],["otc_publisher_video_stats","Publisher video stats."],["otc_session",""],["otc_session_callbacks","Session callback functions."],["otc_session_capabilities","Session capabilities."],["otc_session_settings",""],["otc_signal_options","Session signal options."],["otc_stream",""],["otc_subscriber",""],["otc_subscriber_audio_stats","This struct represents subscriber audio stats, reported periodically by the {@link otc_subscriber_callbacks.on_audio_stats} callback function."],["otc_subscriber_callbacks","Subscriber callback functions."],["otc_subscriber_rtc_stats_report_cb","Defines the struct for setting the subcriber RTC stats report callack."],["otc_subscriber_video_stats","This struct represents subscriber video stats, reported periodically by the {@link otc_subscriber_callbacks.on_video_stats} callback function."],["otc_video_capturer",""],["otc_video_capturer_callbacks","Audio device callback functions."],["otc_video_capturer_settings","Video capturer settings."],["otc_video_frame",""],["otc_video_frame_planar_memory_callbacks","Defines a struct containing callback functions for a video frame plane memory wrapper struct. @see otc_video_frame_new_planar_memory_wrapper"]],"type":[["__int16_t",""],["__int64_t",""],["__uint32_t",""],["__uint64_t",""],["__uint8_t",""],["otc_bool","Type definition for Boolean values."],["otc_constant","This enumeration includes commonly used constants."],["otc_error",""],["otc_error_code","This enumeration includes error codes."],["otc_log_level","Log level enumeration."],["otc_logger_callback","Type definition for a function pointer to the function used as the custom logging callback to get messages logged by the SDK. @param message A pointer to the message being logged. @see otc_log_set_logger_callback"],["otc_publisher_error_code","Error code enumeration for OpenTok publishers."],["otc_publisher_video_type","Publisher video type enumeration."],["otc_session_error_code","Error code enumeration for OpenTok sessions."],["otc_status","Type definition for statuses."],["otc_stream_video_type","Stream video type enumeration."],["otc_subscriber_error_code","Error code enumeration for OpenTok subscribers."],["otc_video_codec_type","Video codec type enum."],["otc_video_frame_format","Video frame video format enumeration."],["otc_video_frame_memory_release_callback","Type definition for the video frame memory release callback function."],["otc_video_frame_plane","Video frame video plane enumeration."],["otc_video_reason","Enum for reasons for a video to be started, stopped, resumed, etc."],["size_t",""]]});